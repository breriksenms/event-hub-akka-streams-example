*.class
*.log

# Gradle specific
.gradle
**/build/

# sbt specific
.bsp/
dist/*
target/
lib_managed/
src_managed/
project/boot/
project/plugins/project/

# Scala-IDE specific
.scala_dependencies
.target
.cache
.classpath
.project
.settings/
.bps/

# Intellij specific
*.iml
*.idea/
*.idea_modules/

# Scala Metals specific
.metals/
.bloop/
metals.sbt
coursier

# Sublime specific
*.sublime-project
*.sublime-workspace

# VS Code specific
.vscode/
.history/

# OS specific
.DS_Store

# Cinnamon local dev
cinnamon-prometheus-docker-sandbox*/

# Minio DB
data/db/*

# scripts with sensitive data
scripts/*.sh

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc